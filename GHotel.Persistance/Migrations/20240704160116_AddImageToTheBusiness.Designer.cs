// <auto-generated />
using System;
using GHotel.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GHotel.Persistance.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240704160116_AddImageToTheBusiness")]
    partial class AddImageToTheBusiness
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GHotel.Domain.Entities.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ImageUrl")
                        .IsUnique()
                        .HasFilter("[ImageUrl] IS NOT NULL");

                    b.HasIndex("UserPersonalNumber");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.MyImage", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Url");

                    b.HasIndex("ProjectName");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Project", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBudget")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RequiredBudget")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Name");

                    b.HasIndex("BusinessId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SharePercentage")
                        .HasColumnType("float");

                    b.Property<string>("UserPersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectName");

                    b.HasIndex("UserPersonalNumber");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserPersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectName");

                    b.HasIndex("UserPersonalNumber");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.User", b =>
                {
                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Business", b =>
                {
                    b.HasOne("GHotel.Domain.Entities.MyImage", "Image")
                        .WithOne()
                        .HasForeignKey("GHotel.Domain.Entities.Business", "ImageUrl")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GHotel.Domain.Entities.User", "User")
                        .WithMany("Businesses")
                        .HasForeignKey("UserPersonalNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.MyImage", b =>
                {
                    b.HasOne("GHotel.Domain.Entities.Project", null)
                        .WithMany("Images")
                        .HasForeignKey("ProjectName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Project", b =>
                {
                    b.HasOne("GHotel.Domain.Entities.Business", "Business")
                        .WithMany("Projects")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Business");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Share", b =>
                {
                    b.HasOne("GHotel.Domain.Entities.Project", "Project")
                        .WithMany("Shares")
                        .HasForeignKey("ProjectName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GHotel.Domain.Entities.User", "User")
                        .WithMany("Shares")
                        .HasForeignKey("UserPersonalNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("GHotel.Domain.Entities.Project", "Project")
                        .WithMany("Transactions")
                        .HasForeignKey("ProjectName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GHotel.Domain.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserPersonalNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Business", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.Project", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Shares");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("GHotel.Domain.Entities.User", b =>
                {
                    b.Navigation("Businesses");

                    b.Navigation("Shares");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
